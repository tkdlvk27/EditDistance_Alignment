import sys

class MatchInformation(object):
    def __init__(self, match, mismatch, gap):
        self.match = match
        self.mismatch = mismatch
        self.gap = gap
    # When the matchscore needs to be fixed
    def setMatch(self,match,mismatch,gap):
        self.match = match
        self.mismatch = mismatch
        self.gap = gap

    # get The match information. It returns as list.
    def getMatch(self):
        return [match, mismatch, gap]

    def GAP(self, Extension_penalty,Length,OpeningGapPenalty):
        return Extension_penalty * Length+OpeningGapPenalty

    # get if match or not
    def MATCH(self, a, b,match,mismatch):
        if a==b:
            return match
        else:
            return mismatch

        
class Alignment(MatchInformation):
    def __init__(self, DNA1, DNA2, match, mismatch, gap):
        MatchInformation.__init__(self, match,mismatch,gap)
        self.DNA1 = DNA1
        self.DNA2 = DNA2
    
    def setDNA1(self,DNA1):
        self.DNA1 = DNA1
    
    def setDNA2(self,DNA2):
        self.DNA2 = DNA2

if __name__ == "__main__":
    DNA1 = "GCTGATATAGCT"
    DNA2 = "GGGTGATTAGCT"
    match = 0
    mismatch = 1
    gap = 1

    
